[ JDBC ] : JAVA DATABASE CONNECT 자바 데이터베이스 연동
                1. 준비
                    1) JDBC MYSQL 라이브러리 다운 : https://dev.mysql.com/downloads/connector/j/
                    2) Select Operating System : : [Platform Independent] 선택
                    3) Platform Independent (Architecture Independent], ZIP Archive 9.3.0   5.1M 다운
                    4) 압축풀기 -> 압축 푼 폴더내 -> 'mysql-connector-j09.3.0.jar'
                    5) 프로젝트내 .jar 넣어주고 오른쪽 클릭 --> [라이브러리 추가]
                2. 연동코드
                3. 핵심 JDBC 인터페이스
                * 인터페이스를 사용하는이유 : 각기 다른 데이터베이스 회사들의 클래스(구현체)를 조작하기 위해 (다형성)
                    1) Connection : 데이터베이스 연동
                            (1) DB서버와 연동 코드
                                Connection conn = DriverManager.getConnection("서버주소","계정","비밀번호");
                            (2) 연동된 DB에 SQL 기재 함수 , 기재된 PreparedStatement 타입 반환
                                PreparedStatement ps = conn.prepareStatement( SQL문법 );

                    2) PreparedStatement : SQL 실행 조작
                            (1) 기재된 SQL 실행 함수
                                ResultSet rs = ps.executeQuery();      SELECT 문법 실행 결과를 ResultSet 타입 반환
                                int count = ps.executeUpdate();        INSERT , UPDATE , DELETE 문법 실행 결과 int 타입 반환


                    3) ResultSet : SQL 실행 결과 조작
                            (1) SQL 결과 조작 함수
                                rs.next();                              조회된 레코드들 중에서 다음 레코드 이동 함수
                                rs.getXXX(속성명);                       현재 레코드에서 지정한 속성명의 값 반환 함수
                                     XXX : 적절한 자바 타입 , getInt( ) , getString ( ) , get Double( ) 등등
        */
    
    
        // OpenCSV 라이브러리 : 목적 - CSV 규칙에 따른 자동 분해/분리
        // 각종 자바 관련 라이브러리 공유 : https://mvnrepository.com/
        // (1) OpenCSV : https://mvnrepository.com/artifact/net.sf.opencsv/opencsv/2.3
        // (2) [JAR] 다운로드 버튼 클릭
        // (3) 해당 패키지로 넣기
        // (4) 현재 프로젝트에 지정한 라이브러리 등록
        // 해당 .JAR 파일을 오른쪽 클릭 --> 가장 하단 [라이브러리 추가]

        //* OPENCSV 라이브러리 사용해보기
            // 1. new CSVReader( new FileReader( 파일경로 ) ) : CSV 읽어오는 클래스
                // --> .readAll() : 데이터를 List<String[]> 타입으로 반환 하는 함수
            // 2. new CSVWriter( new FileWriter( 파일경로 ) ) : CSV 출력하는 클래스
                // --> .writeAll( List객체 ) : List객체를 CSV 로 내보내는 함수