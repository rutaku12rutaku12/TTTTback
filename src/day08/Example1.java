package day08;

public class Example1 { // class start
    public static void main(String[] args) { // main start
        /*
            [ 생성자 ]
                1. 정의 : 객체를 (new)생성 할때 사용되는 (딱1번) 초기화 담당 함수
                    * 초기화 : 초기에 값 대입 , 처음에 로직처리
                2. 규칙
                    1) 클래스명과 *무조건* 동일한 이름을 갖는다.
                        클래스명 변수명 = new 생성자명();
                        * 만일 클래스명 이름이 다르면 *메소드* 취급 당한다.
                    2) 오버로드 : 메소드/생성자는 매개변수의 개수/타입/순서 가 다르면 동일한 이름으로 여러개 선언 가능
                       * 변수명/식별자 는 동일한 이름을 가질수 없다.
                       즉] 메소드/생성자는 동일한 이름으로 여러개 만들수 없다.
               3. 종류
                1) 기본생성자
                   정의 : 생성자명(){ }
                   사용 : new 생성자명();


        */

        // [1] 기본 생성자를 이용한 객체 생성
            // 클래스명 변수명 = new 생성자명();
        Phone p1 = new Phone();
            // -> 생성자 안써
            p1.model = "갤럭시25";
            p1.color = "실버";
        // [2] 매개변수 갖는 생성자를 이용한 객체 생성
        Phone p2 = new Phone( "갤럭시25", "실버");

        // 생성자 목적 :
        // 1. 객체 생성시 빠른 멤버변수 초기화
        // 2. 협업 있어서 규칙적인 값 초기화
        // 단점 : 규칙에 따른 복잡도 증가 , 자유도 감소

        // [3]
        Phone p3 = new Phone( "아이폰 15" , "화이트" , 1500000);

        // [4] 생성자에서 정의되지 않은 매개변수와 불일치는 오류발생
        // Phone p4 = new Phone( 150000, "화이트" , "아이폰 15" );

    } // main end
} // class end
